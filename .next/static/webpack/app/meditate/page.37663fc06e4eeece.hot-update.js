"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/meditate/page",{

/***/ "(app-pages-browser)/./app/context/MeditationContext.tsx":
/*!*******************************************!*\
  !*** ./app/context/MeditationContext.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MeditationProvider: function() { return /* binding */ MeditationProvider; },\n/* harmony export */   useMeditation: function() { return /* binding */ useMeditation; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AuthContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthContext */ \"(app-pages-browser)/./app/context/AuthContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ MeditationProvider,useMeditation auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst MeditationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction MeditationProvider(param) {\n    let { children } = param;\n    _s();\n    const [sessions, setSessions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [stats, setStats] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        totalSessions: 0,\n        totalMinutes: 0,\n        averageSessionLength: 0,\n        weeklyProgress: {},\n        bestTime: \"Morning\"\n    });\n    const { user } = (0,_AuthContext__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (user) {\n            // Load sessions from localStorage\n            const storedSessions = localStorage.getItem(\"meditation_sessions_\".concat(user.id));\n            if (storedSessions) {\n                const parsedSessions = JSON.parse(storedSessions);\n                setSessions(parsedSessions);\n                updateStats(parsedSessions);\n            }\n        }\n    }, [\n        user\n    ]);\n    const updateStats = (sessions)=>{\n        if (sessions.length === 0) return;\n        const totalMinutes = sessions.reduce((sum, session)=>sum + session.duration, 0);\n        const averageSessionLength = Math.round(totalMinutes / sessions.length);\n        // Calculate weekly progress\n        const weeklyProgress = {};\n        const days = [\n            \"Sun\",\n            \"Mon\",\n            \"Tue\",\n            \"Wed\",\n            \"Thu\",\n            \"Fri\",\n            \"Sat\"\n        ];\n        days.forEach((day)=>weeklyProgress[day] = 0);\n        sessions.forEach((session)=>{\n            const date = new Date(session.completedAt);\n            const day = days[date.getDay()];\n            weeklyProgress[day] += session.duration;\n        });\n        // Calculate best time\n        const morningSessions = sessions.filter((s)=>{\n            const hour = new Date(s.completedAt).getHours();\n            return hour >= 5 && hour < 12;\n        }).length;\n        const afternoonSessions = sessions.filter((s)=>{\n            const hour = new Date(s.completedAt).getHours();\n            return hour >= 12 && hour < 17;\n        }).length;\n        const eveningSessions = sessions.filter((s)=>{\n            const hour = new Date(s.completedAt).getHours();\n            return hour >= 17 && hour < 22;\n        }).length;\n        let bestTime = \"Morning\";\n        if (afternoonSessions > morningSessions && afternoonSessions > eveningSessions) {\n            bestTime = \"Afternoon\";\n        } else if (eveningSessions > morningSessions && eveningSessions > afternoonSessions) {\n            bestTime = \"Evening\";\n        }\n        setStats({\n            totalSessions: sessions.length,\n            totalMinutes,\n            averageSessionLength,\n            weeklyProgress,\n            bestTime\n        });\n    };\n    const addSession = (theme, duration, sessionType)=>{\n        if (!user) return;\n        const newSession = {\n            id: Date.now().toString(),\n            userId: user.id,\n            theme,\n            duration,\n            completedAt: new Date().toISOString(),\n            sessionType\n        };\n        const updatedSessions = [\n            ...sessions,\n            newSession\n        ];\n        setSessions(updatedSessions);\n        updateStats(updatedSessions);\n        // Save to localStorage\n        localStorage.setItem(\"meditation_sessions_\".concat(user.id), JSON.stringify(updatedSessions));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MeditationContext.Provider, {\n        value: {\n            sessions,\n            stats,\n            addSession\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\openmeditation\\\\app\\\\context\\\\MeditationContext.tsx\",\n        lineNumber: 122,\n        columnNumber: 5\n    }, this);\n}\n_s(MeditationProvider, \"t9JSu8/eQz3WK3g5WvSlpgaVclE=\", false, function() {\n    return [\n        _AuthContext__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = MeditationProvider;\nfunction useMeditation() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(MeditationContext);\n    if (context === undefined) {\n        throw new Error(\"useMeditation must be used within a MeditationProvider\");\n    }\n    return context;\n}\n_s1(useMeditation, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"MeditationProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/context/MeditationContext.tsx\n"));

/***/ })

});